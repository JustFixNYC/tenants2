# Generated by Django 2.2.10 on 2020-04-18 19:27

from django.db import migrations, models
import project.util.mailing_address


class Migration(migrations.Migration):

    dependencies = [
        ('onboarding', '0011_optional_step_2'),
    ]

    operations = [
        migrations.AddField(
            model_name='onboardinginfo',
            name='non_nyc_city',
            field=models.CharField(blank=True, help_text="The non-NYC city the user's address is in, if they live outside of NYC.", max_length=80),
        ),
        migrations.AddField(
            model_name='onboardinginfo',
            name='state',
            field=models.CharField(choices=[('AK', 'Alaska'), ('AL', 'Alabama'), ('AS', 'American Samoa'), ('AZ', 'Arizona'), ('AR', 'Arkansas'), ('CA', 'California'), ('CO', 'Colorado'), ('CT', 'Connecticut'), ('DE', 'Delaware'), ('DC', 'District of Columbia'), ('FL', 'Florida'), ('GA', 'Georgia'), ('GU', 'Guam'), ('HI', 'Hawaii'), ('ID', 'Idaho'), ('IL', 'Illinois'), ('IN', 'Indiana'), ('IA', 'Iowa'), ('KS', 'Kansas'), ('KY', 'Kentucky'), ('LA', 'Louisiana'), ('ME', 'Maine'), ('MD', 'Maryland'), ('MA', 'Massachusetts'), ('MI', 'Michigan'), ('MN', 'Minnesota'), ('MP', 'Northern Mariana Islands'), ('MS', 'Mississippi'), ('MO', 'Missouri'), ('MT', 'Montana'), ('NE', 'Nebraska'), ('NV', 'Nevada'), ('NH', 'New Hampshire'), ('NJ', 'New Jersey'), ('NM', 'New Mexico'), ('NY', 'New York'), ('NC', 'North Carolina'), ('ND', 'North Dakota'), ('OH', 'Ohio'), ('OK', 'Oklahoma'), ('OR', 'Oregon'), ('PA', 'Pennsylvania'), ('PR', 'Puerto Rico'), ('RI', 'Rhode Island'), ('SC', 'South Carolina'), ('SD', 'South Dakota'), ('TN', 'Tennessee'), ('TX', 'Texas'), ('UT', 'Utah'), ('VT', 'Vermont'), ('VA', 'Virginia'), ('VI', 'Virgin Islands'), ('WA', 'Washington'), ('WV', 'West Virginia'), ('WI', 'Wisconsin'), ('WY', 'Wyoming')], default='NY', help_text='The two-letter state or territory of the user, e.g. "NY".', max_length=2),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='onboardinginfo',
            name='borough',
            field=models.CharField(blank=True, choices=[('BROOKLYN', 'Brooklyn'), ('QUEENS', 'Queens'), ('BRONX', 'Bronx'), ('MANHATTAN', 'Manhattan'), ('STATEN_ISLAND', 'Staten Island')], help_text="The New York City borough the user's address is in, if they live inside NYC.", max_length=20),
        ),
        migrations.AlterField(
            model_name='onboardinginfo',
            name='lease_type',
            field=models.CharField(blank=True, choices=[('RENT_STABILIZED', 'Rent Stabilized/Rent Controlled'), ('MARKET_RATE', 'Market Rate'), ('NYCHA', 'NYCHA Housing Development'), ('OTHER', 'Other (Mitchell Lama, COOP/Condo, House, HUD, etc.)'), ('NOT_SURE', "I'm not sure (currently hidden in app)"), ('NO_LEASE', "I don't have a lease")], help_text='The type of lease the user has on their dwelling (NYC only).', max_length=30),
        ),
        migrations.AlterField(
            model_name='onboardinginfo',
            name='pad_bbl',
            field=models.CharField(blank=True, help_text="The user's Boro, Block, and Lot number. This field is automatically updated for NYC users when you change the address or borough.", max_length=10),
        ),
        migrations.AlterField(
            model_name='onboardinginfo',
            name='pad_bin',
            field=models.CharField(blank=True, help_text="The user's building identification number (BIN). This field is automatically updated for NYC users when you change the address or borough.", max_length=7),
        ),
        migrations.AlterField(
            model_name='onboardinginfo',
            name='receives_public_assistance',
            field=models.NullBooleanField(help_text='Does the user receive public assistance, e.g. Section 8?'),
        ),
        migrations.AlterField(
            model_name='onboardinginfo',
            name='zipcode',
            field=models.CharField(blank=True, help_text="The user's ZIP code. This field is automatically updated for NYC users when you change the address or borough.", max_length=12, validators=[project.util.mailing_address.ZipCodeValidator()]),
        ),
    ]
