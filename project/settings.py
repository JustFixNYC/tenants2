"""
Django settings for project project.

Generated by 'django-admin startproject' using Django 2.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
import sys
import dotenv
from pathlib import Path
from typing import List
import dj_database_url

from . import typed_environ


BASE_DIR = Path(__file__).parent.parent.resolve()


dotenv.load_dotenv(BASE_DIR / '.env')


class JustfixEnvironment(typed_environ.BaseEnvironment):
    '''
    Our base environment variables.
    '''

    # The URL to the database, as per dj-database-url:
    # https://github.com/kennethreitz/dj-database-url#url-schema
    DATABASE_URL: str

    # SECURITY WARNING: keep the secret key used in production secret!
    SECRET_KEY: str

    # SECURITY WARNING: don't run with debug turned on in production!
    DEBUG: bool = False


class JustfixDebugEnvironment(JustfixEnvironment):
    '''
    These are the environment defaults when DEBUG is set.
    '''

    DEBUG = True

    SECRET_KEY = 'for development/testing only!'

    DATABASE_URL = f"sqlite:///{BASE_DIR / 'db.sqlite3'}"


env: JustfixEnvironment

if typed_environ.Converters.convert_bool(os.environ.get('DEBUG', 'no')):
    env = JustfixDebugEnvironment()
else:
    env = JustfixEnvironment()

SECRET_KEY = env.SECRET_KEY

DEBUG = env.DEBUG

# TODO: Figure out if this can securely stay at '*'.
ALLOWED_HOSTS: List[str] = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'project',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': dj_database_url.parse(env.DATABASE_URL),
}


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'
